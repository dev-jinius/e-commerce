spring:
  application.name: ecommerce
  config:
    group:
      "dev": "dev"
      "prod": "prod"
  data:
    redis:
      host: ${REDIS_SERVER_IP}
      port: ${REDIS_SERVER_PORT}
      password: ${REDIS_SERVER_PASSWORD}

# Swagger
springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  packages-to-scan: com.jinius.ecommerce
  swagger-ui:
    path: /
    display-request-duration: true
    groups-order: desc
    operations-sorter: alpha
    disable-swagger-default-url: true
  api-docs:
    groups:
      enabled: true

server:
  port: 8080
---
spring:
  config:
    activate:
      on-profile: "dev"

  datasource:
    url: 'jdbc:h2:mem:ecommerce;MODE=MySQL'
    driver-class-name: org.h2.Driver
    username: sa
    password:

  h2:
    console:
      settings.web-allow-others: true
      enabled: true
      path: /h2-console

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop        # none, create, create-drop, update, validate
    defer-datasource-initialization: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
        show_sql: true
    generate-ddl: true
  sql:
    init:
      data-locations: 'classpath:/data.sql'
      mode: always
      platform: h2

---
spring:
  config:
    activate:
      on-profile: "prod"

  # DB - MariaDB
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:13306/jinius?characterEncoding=UTF-8&serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
    username: ${DB_USER}
    password: ${DB_PASSWORD}

  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MariaDBDialect
    hibernate:
      ddl-auto: none        # none, create, create-drop, update, validate
    defer-datasource-initialization: true
    open-in-view: false
    show_sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 1000
  sql:
    init:
#      schema-locations: classpath:ddl.sql
      data-locations: classpath:data.sql
      mode: always

logging:
  level:
    org:
      hibernate:
        orm:
          jdbc:
            bind: trace